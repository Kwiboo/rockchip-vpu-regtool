rlc_mode_e=0
init_qp=pps->pic_init_qp_minus26 + 26
refidx0_active=pps->num_ref_idx_l0_default_active_minus1 + 1
ref_frames=sps->max_num_ref_frames
framenum_len=sps->log2_max_frame_num_minus4 + 4
framenum=slices[0].frame_num
const_intra_e=pps->flags & V4L2_H264_PPS_FLAG_CONSTRAINED_INTRA_PRED
filt_ctrl_pres=pps->flags & V4L2_H264_PPS_FLAG_DEBLOCKING_FILTER_CONTROL_PRESENT
rdpic_cnt_pres=pps->flags & V4L2_H264_PPS_FLAG_REDUNDANT_PIC_CNT_PRESENT
refpic_mk_len=slices[0].dec_ref_pic_marking_bit_size
idr_pic_e=dec_param->flags & V4L2_H264_DECODE_PARAM_FLAG_IDR_PIC
idr_pic_id=slices[0].idr_pic_id
pps_id = slices[0].pic_parameter_set_id
poc_length = slices[0].pic_order_cnt_bit_size
picord_count_e = 1
cabac_e = pps->flags & V4L2_H264_PPS_FLAG_ENTROPY_CODING_MODE
filtering_dis = 0
ch_qp_offset = pps->chroma_qp_index_offset
ch_qp_offset2 = pps->second_chroma_qp_index_offset
write_mvs_e = dec_param->nal_ref_idc
dir_8x8_infer_e = sps->flags & V4L2_H264_SPS_FLAG_DIRECT_8X8_INFERENCE
weight_pred_e = pps->flags & V4L2_H264_PPS_FLAG_WEIGHTED_PRED
weight_bipr_idc = pps->weighted_bipred_idc
refidx1_active = pps->num_ref_idx_l1_default_active_minus1 + 1
fieldpic_flag_e = !(sps->flags & V4L2_H264_SPS_FLAG_FRAME_MBS_ONLY)
pic_interlace_e = !(sps->flags & V4L2_H264_SPS_FLAG_FRAME_MBS_ONLY) && (sps->flags & V4L2_H264_SPS_FLAG_MB_ADAPTIVE_FRAME_FIELD || slices[0].flags & V4L2_H264_SLICE_FLAG_FIELD_PIC)
pic_fieldmode_e = slices[0].flags & V4L2_H264_SLICE_FLAG_FIELD_PIC
pic_topfield_e = !(slices[0].flags & V4L2_H264_SLICE_FLAG_BOTTOM_FIELD)
seq_mbaff_e = sps->flags & V4L2_H264_SPS_FLAG_MB_ADAPTIVE_FRAME_FIELD
8x8trans_flag_e = pps->flags & V4L2_H264_PPS_FLAG_TRANSFORM_8X8_MODE
blackwhite_e = sps->profile_idc >= 100 && sps->chroma_format_idc == 0
type1_quant_e = 1
dec_mode = 0
dec_in_endian = 0
dec_max_burst = 16
dec_scmd_dis = 0
dec_adv_pre_dis = 0
apf_threshold = 8
dec_latency = 0
dec_data_disc_e = 0
dec_out_endian = 1
dec_inswap32_e = 1
dec_outswap32_e = 1
dec_strswap32_e = 1
dec_strendian_e = 1
dec_timeout_e = 1
dec_clk_gate_e = 1
dec_axi_rd_id=0xff
dec_axi_wr_id=0
pred_bc_tap_0_0 = 1
pred_bc_tap_0_1 = (u32)-5
pred_bc_tap_0_2 = 20
STREAM_LEN = vb2_get_plane_payload(&src_buf->vb2_buf, 0)
PIC_MB_WIDTH = H264_MB_WIDTH(ctx->dst_fmt.width)
PIC_MB_HEIGHT_P = H264_MB_HEIGHT(ctx->dst_fmt.height)

refer0_base = hantro_h264_get_ref_dma_addr(ctx, 0)
refer1_base = hantro_h264_get_ref_dma_addr(ctx, 1)
refer2_base = hantro_h264_get_ref_dma_addr(ctx, 2)
refer3_base = hantro_h264_get_ref_dma_addr(ctx, 3)
refer4_base = hantro_h264_get_ref_dma_addr(ctx, 4)
refer5_base = hantro_h264_get_ref_dma_addr(ctx, 5)
refer6_base = hantro_h264_get_ref_dma_addr(ctx, 6)
refer7_base = hantro_h264_get_ref_dma_addr(ctx, 7)
refer8_base = hantro_h264_get_ref_dma_addr(ctx, 8)
refer9_base = hantro_h264_get_ref_dma_addr(ctx, 9)
refer10_base = hantro_h264_get_ref_dma_addr(ctx, 10)
refer11_base = hantro_h264_get_ref_dma_addr(ctx, 11)
refer12_base = hantro_h264_get_ref_dma_addr(ctx, 12)
refer13_base = hantro_h264_get_ref_dma_addr(ctx, 13)
refer14_base = hantro_h264_get_ref_dma_addr(ctx, 14)
refer15_base = hantro_h264_get_ref_dma_addr(ctx, 15)

REFER_LTERM_E=ctx->h264_dec.dpb_longterm
REFER_VALID_E=ctx->h264_dec.dpb_valid
START_CODE_E=1
STRM_START_BIT=0
PIC_FIXED_QUANT=0
DIR_MV_BASE=addr
QTABLE_BASE=ctx->h264_dec.priv.dma

CH_8PIX_ILEAV_E=0
REFBU_E=0

STARTMB_X=0
STARTMB_Y=0

REFER0_NBR=hantro_h264_get_ref_nbr(ctx, 0)
REFER1_NBR=hantro_h264_get_ref_nbr(ctx, 1)
REFER2_NBR=hantro_h264_get_ref_nbr(ctx, 2)
REFER3_NBR=hantro_h264_get_ref_nbr(ctx, 3)
REFER4_NBR=hantro_h264_get_ref_nbr(ctx, 4)
REFER5_NBR=hantro_h264_get_ref_nbr(ctx, 5)
REFER6_NBR=hantro_h264_get_ref_nbr(ctx, 6)
REFER7_NBR=hantro_h264_get_ref_nbr(ctx, 7)
REFER8_NBR=hantro_h264_get_ref_nbr(ctx, 8)
REFER9_NBR=hantro_h264_get_ref_nbr(ctx, 9)
REFER10_NBR=hantro_h264_get_ref_nbr(ctx, 10)
REFER11_NBR=hantro_h264_get_ref_nbr(ctx, 11)
REFER12_NBR=hantro_h264_get_ref_nbr(ctx, 12)
REFER13_NBR=hantro_h264_get_ref_nbr(ctx, 13)
REFER14_NBR=hantro_h264_get_ref_nbr(ctx, 14)
REFER15_NBR=hantro_h264_get_ref_nbr(ctx, 15)

PINIT_RLIST_F0=p_reflist[0]
PINIT_RLIST_F1=p_reflist[1]
PINIT_RLIST_F2=p_reflist[2]
PINIT_RLIST_F3=p_reflist[3]
PINIT_RLIST_F4=p_reflist[4]
PINIT_RLIST_F5=p_reflist[5]
PINIT_RLIST_F6=p_reflist[6]
PINIT_RLIST_F7=p_reflist[7]
PINIT_RLIST_F8=p_reflist[8]
PINIT_RLIST_F9=p_reflist[9]
PINIT_RLIST_F10=p_reflist[10]
PINIT_RLIST_F11=p_reflist[11]
PINIT_RLIST_F12=p_reflist[12]
PINIT_RLIST_F13=p_reflist[13]
PINIT_RLIST_F14=p_reflist[14]
PINIT_RLIST_F15=p_reflist[15]

BINIT_RLIST_F0=b0_reflist[0]
BINIT_RLIST_F1=b0_reflist[1]
BINIT_RLIST_F2=b0_reflist[2]
BINIT_RLIST_F3=b0_reflist[3]
BINIT_RLIST_F4=b0_reflist[4]
BINIT_RLIST_F5=b0_reflist[5]
BINIT_RLIST_F6=b0_reflist[6]
BINIT_RLIST_F7=b0_reflist[7]
BINIT_RLIST_F8=b0_reflist[8]
BINIT_RLIST_F9=b0_reflist[9]
BINIT_RLIST_F10=b0_reflist[10]
BINIT_RLIST_F11=b0_reflist[11]
BINIT_RLIST_F12=b0_reflist[12]
BINIT_RLIST_F13=b0_reflist[13]
BINIT_RLIST_F14=b0_reflist[14]
BINIT_RLIST_F15=b0_reflist[15]

BINIT_RLIST_B0=b1_reflist[0]
BINIT_RLIST_B1=b1_reflist[1]
BINIT_RLIST_B2=b1_reflist[2]
BINIT_RLIST_B3=b1_reflist[3]
BINIT_RLIST_B4=b1_reflist[4]
BINIT_RLIST_B5=b1_reflist[5]
BINIT_RLIST_B6=b1_reflist[6]
BINIT_RLIST_B7=b1_reflist[7]
BINIT_RLIST_B8=b1_reflist[8]
BINIT_RLIST_B9=b1_reflist[9]
BINIT_RLIST_B10=b1_reflist[10]
BINIT_RLIST_B11=b1_reflist[11]
BINIT_RLIST_B12=b1_reflist[12]
BINIT_RLIST_B13=b1_reflist[13]
BINIT_RLIST_B14=b1_reflist[14]
BINIT_RLIST_B15=b1_reflist[15]
